// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.6.1
// source: lib/proto/glist/db.proto

package glist

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// GListServiceClient is the client API for GListService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GListServiceClient interface {
}

type gListServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGListServiceClient(cc grpc.ClientConnInterface) GListServiceClient {
	return &gListServiceClient{cc}
}

// GListServiceServer is the server API for GListService service.
// All implementations must embed UnimplementedGListServiceServer
// for forward compatibility
type GListServiceServer interface {
	mustEmbedUnimplementedGListServiceServer()
}

// UnimplementedGListServiceServer must be embedded to have forward compatible implementations.
type UnimplementedGListServiceServer struct {
}

func (UnimplementedGListServiceServer) mustEmbedUnimplementedGListServiceServer() {}

// UnsafeGListServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GListServiceServer will
// result in compilation errors.
type UnsafeGListServiceServer interface {
	mustEmbedUnimplementedGListServiceServer()
}

func RegisterGListServiceServer(s grpc.ServiceRegistrar, srv GListServiceServer) {
	s.RegisterService(&GListService_ServiceDesc, srv)
}

// GListService_ServiceDesc is the grpc.ServiceDesc for GListService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GListService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "glist.GListService",
	HandlerType: (*GListServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "lib/proto/glist/db.proto",
}
