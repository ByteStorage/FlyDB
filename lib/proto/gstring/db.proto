syntax = "proto3";

package gstring;
option go_package = 	"lib/proto/gstring";

service GStringService {
  rpc NewFlyDBService(FlyDBOption) returns (NewFlyDBResponse) {}
  rpc Get(GetRequest) returns (GetResponse) {}
  rpc Put(SetRequest) returns (SetResponse) {}
  rpc Del(DelRequest) returns (DelResponse) {}
  rpc Type(TypeRequest) returns (TypeResponse) {}
  rpc StrLen(StrLenRequest) returns (StrLenResponse) {}
  rpc GetSet(GetSetRequest) returns (GetSetResponse) {}
  rpc Append(AppendRequest) returns (AppendResponse) {}
  rpc Incr(IncrRequest) returns (IncrResponse) {}
  rpc IncrBy(IncrByRequest) returns (IncrByResponse) {}
  rpc IncrByFloat(IncrByFloatRequest) returns (IncrByFloatResponse) {}
  rpc Decr(DecrRequest) returns (DecrResponse) {}
  rpc DecrBy(DecrByRequest) returns (DecrByResponse) {}
  rpc Exists(ExistsRequest) returns (ExistsResponse) {}
  rpc Expire(ExpireRequest) returns (ExpireResponse) {}
  rpc Persist(PersistRequest) returns (PersistResponse) {}
  rpc MGet(MGetRequest) returns (MGetResponse) {}
  rpc MSet(MSetRequest) returns (MSetResponse) {}
  rpc MSetNX(MSetNXRequest) returns (MSetNXResponse) {}
  rpc TTL(TTLRequest) returns (TTLResponse) {}
  rpc Keys(KeysRequest) returns (KeysResponse) {}
  rpc Size(SizeRequest) returns (SizeResponse) {}
}

message FlyDBOption {
  string DirPath = 1;
  int64 DataFileSize = 2;
  bool SyncWrite = 3;
}

message NewFlyDBResponse {
  string ResponseMsg = 1;
}

message GetRequest {
  string key = 1;
}

message GetResponse {
  oneof value {
    string StringValue = 1;
    int32 Int32Value = 2;
    int64 Int64Value = 3;
    float Float32Value = 4;
    double Float64Value = 5;
    bool BoolValue = 6;
    bytes BytesValue = 7;
  }
}

message SetRequest {
  string key = 1;
  oneof value {
    string StringValue = 2;
    int32 Int32Value = 3;
    int64 Int64Value = 4;
    float Float32Value = 5;
    double Float64Value = 6;
    bool BoolValue = 7;
    bytes BytesValue = 8;
  };
  int64 expire = 9;
}

message SetResponse {
  bool ok = 1;
}

message DelRequest {
  string key = 1;
}

message DelResponse {
  bool ok = 1;
}

message TypeRequest {
  string key = 1;
}

message TypeResponse {
  string type = 1;
}

message StrLenRequest {
  string key = 1;
}

message StrLenResponse {
  int32 length = 1;
}

message GetSetRequest {
  string key = 1;
  oneof value {
    string StringValue = 2;
    int32 Int32Value = 3;
    int64 Int64Value = 4;
    float Float32Value = 5;
    double Float64Value = 6;
    bool BoolValue = 7;
    bytes BytesValue = 8;
  };
  int64 expire = 9;
}

message GetSetResponse {
  oneof value {
    string StringValue = 1;
    int32 Int32Value = 2;
    int64 Int64Value = 3;
    float Float32Value = 4;
    double Float64Value = 5;
    bool BoolValue = 6;
    bytes BytesValue = 7;
  }
}

message AppendRequest {
  string key = 1;
  string value = 2;
  int64 expire = 3;
}

message AppendResponse {
  bool ok = 1;
}

message IncrRequest {
  string key = 1;
  int64 expire = 2;
}

message IncrResponse {
  bool ok = 1;
}

message IncrByRequest {
  string key = 1;
  int32 amount = 2;
  int64 expire = 3;
}

message IncrByResponse {
  bool ok = 1;
}

message IncrByFloatRequest {
  string key = 1;
  double amount = 2;
  int64 expire = 3;
}

message IncrByFloatResponse {
  bool ok = 1;
}

message DecrRequest {
  string key = 1;
  int64 expire = 2;
}

message DecrResponse {
  bool ok = 1;
}

message DecrByRequest {
  string key = 1;
  int32 amount = 2;
  int64 expire = 3;
}

message DecrByResponse {
  bool ok = 1;
}

message ExistsRequest {
  string key = 1;
}

message ExistsResponse {
  bool exists = 1;
}

message ExpireRequest {
  string key = 1;
  int64 expire = 2;
}

message ExpireResponse {
  bool ok = 1;
}

message PersistRequest {
  string key = 1;
}

message PersistResponse {
  bool ok = 1;
}

message MGetRequest {
  repeated string keys = 1;
}

message MGetResponse {
  repeated MGetValue values = 2;
}

message MGetValue {
  oneof value {
    string  string_value  = 1;
    int32   int32_value   = 2;
    int64   int64_value   = 3;
    float   float32_value = 4;
    double  float64_value = 5;
    bool    bool_value    = 6;
    bytes   bytes_value   = 7;
  }
}
message MSetRequest {
  repeated KeyValue pairs = 1;

  message KeyValue {
    string key = 1;
    oneof value {
      string string_value = 2;
      int32 int32_value = 3;
      int64 int64_value = 4;
      float float32_value = 5;
      double float64_value = 6;
      bool bool_value = 7;
      bytes bytes_value = 8;
    }
  }
}
message MSetResponse {
  bool success = 1;
}
message MSetNXRequest {
  repeated KeyValue pairs = 1;

  message KeyValue {
    string key = 1;
    oneof value {
      string string_value = 2;
      int32 int32_value = 3;
      int64 int64_value = 4;
      float float32_value = 5;
      double float64_value = 6;
      bool bool_value = 7;
      bytes bytes_value = 8;
    }
  }
}

message MSetNXResponse {
   bool success = 1;
}

message TTLRequest {
  string key = 1;
}

message TTLResponse {
  int64 ttl = 1;
}

message KeysRequest {
  string pattern = 1;
}

message KeysResponse {}

message SizeRequest {
  string key = 1;
}

message SizeResponse {
  int64 size = 1;
}
